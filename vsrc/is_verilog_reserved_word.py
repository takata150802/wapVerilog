# -*- coding: utf-8 -*-
"""
Created on Sun Feb  4 23:36:33 2018

@author: ryotakata
"""
verilog_reserved_words = [\
"always", 
"and", 
"assign", 
"begin", 
"buf", 
"bufif0", 
"bufif1", 
"case", 
"casx", 
"casez", 
"cmos", 
"deassign", 
"default", 
"defparam", 
"disable", 
"edge", 
"else", 
"end", 
"endcase", 
"endmodule", 
"endfuncion", 
"endprimitive", 
"endspecify", 
"endtable", 
"endtask", 
"event", 
"for", 
"force", 
"forever", 
"fork", 
"function", 
"highz0", 
"highz1", 
"if", 
"ifnone", 
"initial", 
"inout", 
"input", 
"integer", 
"join", 
"large", 
"macromodule", 
"medium", 
"module", 
"nand", 
"negedge", 
"nmos", 
"nor", 
"not", 
"notif0", 
"notif1", 
"output", 
"parameter", 
"pmos", 
"posedge", 
"primitive", 
"pull0", 
"pull1", 
"pullup", 
"pulldown", 
"rcmos", 
"real", 
"realtime", 
"reg", 
"release", 
"repeat", 
"rnmos", 
"rpmos", 
"rtran", 
"rtranif0", 
"rtranif1", 
"scalared", 
"small", 
"specify", 
"specparam", 
"strong0", 
"strong1", 
"supply0", 
"supply1", 
"table", 
"task", 
"time", 
"tran", 
"tranif0", 
"tranif1", 
"tri", 
"tri0", 
"tri1", 
"triand", 
"trior", 
"trireg", 
"vectored", 
"wait", 
"wand", 
"weak0", 
"weak1", 
"while", 
"wire", 
"wor", 
"xnor", 
"xor"]

def is_verilog_reserved_word(str_):
    ls_ = [x == str_ for x in verilog_reserved_words]
    return reduce(lambda x,y: x or y, ls_)